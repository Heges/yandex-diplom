stages:
  - build
  - test
  - release

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

build-backend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  before_script:
    - env
  script:
    - echo "Build Backend Start"
    - env
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/momo-backend:$CI_COMMIT_SHA"
      --cache=true

sonarqube-backend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd backend
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.host.url=${SONARQUBE_URL} -Dsonar.login=${SONAR_LOGIN_BACKEND} -Dsonar.projectKey=${SONAR_KEY_DIPLOM_BACKEND}
  allow_failure: true

unit-test:
  stage: test
  image: golang:1.23
  variables:
    GOPATH: $CI_PROJECT_DIR/backend/.go
    GIT_DEPTH: "0"
  script:
    - cd backend
    - go test -v ./... 
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - backend/.go/pkg/mod/

upload-backend:
  stage: release
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [ "" ]
  cache: [ ]
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA $VERSION
